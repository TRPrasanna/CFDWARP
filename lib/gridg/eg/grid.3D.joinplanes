{is=1;
js=1;
ks=1;
ie=20;
je=20;
ke=20;
dx1=0.1e-3;

Grid3D(
  Size ( is,js,ks, ie,je,ke );
  Corners(is,js,ks, 0,0,0, ie,je,ke, 1,1,1);
  {left}   JoinCorners( is,js,ks, is,je,ke, NO,0.5,1,1, EE,0.5,1,1, EE, 0.5,1,1 );
  {right}  JoinCorners( ie,js,ks, ie,je,ke, NO,0.5,1,1, EE,0.5,1,1, EE, 0.5,1,1 );
  {bottom} JoinCorners( is,js,ks, ie,js,ke, FE,0.5,dx1,1, NO,0.5,1,1, EE, 0.5,1,1 );
  {top}    JoinCorners( is,je,ks, ie,je,ke, FE,0.5,dx1,1, NO,0.5,1,1, EE, 0.5,1,1 );
  {front}  JoinCorners( is,js,ks, ie,je,ks, FE,0.5,dx1,1, EE,0.5,1,1, NO, 0.5,1,1 );
  {back}   JoinCorners( is,js,ke, ie,je,ke, FE,0.5,dx1,1, EE,0.5,1,1, NO, 0.5,1,1 );
  JoinPlanes(is,js,ks,ie,je,ke);
);
}

is=1;
js=1;
ks=1;
ie=40;
je=40;
ke=40;
i2=ie/2;
j2=je/2;
k2=ke/2;
dx1=0.1e-3;

Grid3D(
  Size ( is,js,ks, ie,je,ke );
  Corners(is,js,ks, 0,0,0, ie,je,ke, 1,1,1);


 {left}
  Corners(is,js,ks, 0,0,0, is,j2,k2, 0,0.5,0.5);
  Corners(is,js,k2, 0,0,0.5, is,j2,ke, 0,0.5,1);
  Corners(is,j2,ks, 0,0.5,0, is,je,k2, 0,1,0.5);
  Corners(is,j2,k2, 0,0.5,0.5, is,je,ke, 0,1,1);
  JoinCorners( is,js,ks, is,j2,k2, NO,0.5,1,1, EE,0.5,1,1/1.2, EE,0.5,1,1/1.2);
  JoinCorners( is,js,k2, is,j2,ke, NO,0.5,1,1, EE,0.5,1,1/1.2, EE, 0.5,1,1.2 );
  JoinCorners( is,j2,ks, is,je,k2, NO,0.5,1,1, EE,0.5,1.2,1, EE, 0.5,1,1/1.2 );
  JoinCorners( is,j2,k2, is,je,ke, NO,0.5,1,1, EE,0.5,1.2,1, EE, 0.5,1,1.2 );
{right}
  Corners(ie,js,ks, 1,0,0, ie,je,ke, 1,1,1);
  JoinCorners( ie,js,ks, ie,je,ke, NO,0.5,1,1, EE,0.5,1,1, EE,0.5,1,1);

{bottom}
  Corners(is,js,ks, 0,0,0, i2,js,ks, 0.5,0,0);
  Corners(is,js,k2, 0,0,0.5, i2,js,k2, 0.5,0,0.5);
  Corners(is,js,ke, 0,0,1, i2,js,ke, 0.5,0,1);
  JoinCorners( is,js,ks, i2,js,ks, EE,0.5,1,1,     NO,0.5,1,1, NO,0.5,1,1 );
  JoinCorners( is,js,k2, i2,js,k2, EE,0.5,1,1/1.5, NO,0.5,1,1, NO,0.5,1,1 );
  JoinCorners( is,js,ke, i2,js,ke, EE,0.5,1,1,     NO,0.5,1,1, NO,0.5,1,1 );
  Join( is,js,ks, i2,js,k2, k, EE,0.5,1,1/1.2);
  Join( is,js,k2, i2,js,ke, k, EE,0.5,1.2,1);
  Join( i2,js,ks, ie,js,ke, i, EE,0.5,1,1);

{top}
  Corners(i2,je,ks, 0.5,1,0, i2,je,ke, 0.5,1,1);
  JoinCorners( i2,je,ks, i2,je,ke, NO,0.5,1,1, NO,0.5,1,1, EE, 0.5,1,1);
  Join(is,je,ks, i2,je,ke, i, EE,0.5,1,1);
  Join(i2,je,ks, ie,je,ke, i, EE,0.5,1,1);

{front}
  Corners(i2,js,ks, 0.5,0,0, i2,je,ks, 0.5,1,0);
  JoinCorners( i2,js,ks, i2,je,ks, NO,0.5,1,1, EE,0.5,1,1, NO, 0.5,1,1);
  Join(is,js,ks, i2,je,ks, i, EE,0.5,1,1);
  Join(i2,js,ks, ie,je,ks, i, EE,0.5,1,1);
{back}
  Corners(i2,js,ke, 0.5,0,1, i2,je,ke, 0.5,1,1);
  JoinCorners( i2,js,ke, i2,je,ke, NO,0.5,1,1, EE,0.5,1,1, NO, 0.5,1,1);
  Join(is,js,ke, i2,je,ke, i, EE,0.5,1,1);
  Join(i2,js,ke, ie,je,ke, i, EE,0.5,1,1);

  Rotate(is,js,ks, ie,je,ke, 0,0,0, rad(90), z);
  JoinPlanes(is,js,ks,ie,je,ke);
);
